import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { TonConnectButton } from "@tonconnect/ui-react";
import { useUser } from "../UserContext"; // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è userId
import "../styles/Onexs.css";

import logo from "../assets/logo.png";
import buttonPartners from "../assets/buttonPartners.png";
import tonIMG from "../assets/ton-img.png";
import onexIMG from "../assets/onex-circle.png";
import Footer from "../Footer";

const API_URL = "https://adminviber1x-production.up.railway.app";
const API_URL_MAIN = "https://1xback-production.up.railway.app";

const Onexs = () => {
  const { userId } = useUser();
  const [selectedCategory, setSelectedCategory] = useState("all");
  const [onexNodes, setOnexNodes] = useState([]);
  const [userNodes, setUserNodes] = useState([]);
  const [purchasedNodes, setPurchasedNodes] = useState([]);

  const navigate = useNavigate();

  // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–¥—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
  useEffect(() => {
    fetch(`${API_URL}/onex-nodes`)
      .then((res) => res.json())
      .then((data) => setOnexNodes(data))
      .catch((error) => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–¥:", error));
  }, []);

  // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∏ –∑–∞—Ñ–∞—Ä–º–ª–µ–Ω–Ω—ã–µ –Ω–æ–¥—ã
  useEffect(() => {
    if (!userId) return;

    const fetchUserData = async () => {
      try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–æ–¥—ã
        const response = await fetch(`${API_URL_MAIN}/get-active-paid-nodes?userId=${userId}`);
        const data = await response.json();
        if (Array.isArray(data.activePaidNodes)) setUserNodes(data.activePaidNodes);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –Ω–æ–¥
        const historyResponse = await fetch(`${API_URL_MAIN}/get-paid-farming-status`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ userId }),
        });
        const historyData = await historyResponse.json();

        if (Array.isArray(historyData.purchasedPaidNodes)) {
          setPurchasedNodes(historyData.purchasedPaidNodes);
        }
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
      }
    };

    fetchUserData();
  }, [userId]);

  // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º onexNodes, –¥–æ–±–∞–≤–ª—è—è `status: "–∑–∞—Ñ–∞—Ä–º–ª–µ–Ω–æ"` –¥–ª—è –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –Ω–æ–¥
  useEffect(() => {
    if (!purchasedNodes.length) return;

    setOnexNodes((prevNodes) =>
      prevNodes.map((node) => {
        const isFarmed = purchasedNodes.some(n => String(n.nodeId) === String(node._id));
        return {
          ...node,
          status: isFarmed ? "–∑–∞—Ñ–∞—Ä–º–ª–µ–Ω–æ" : node.status || "–¥–æ—Å—Ç—É–ø–Ω–æ",
        };
      })
    );
  }, [purchasedNodes, userId]);

  return (
    <div className="App">
      <div className="ONEXs_Window">
        <div className="Header">
          <div className="HeaderLogoContainer">
            <img src={logo} alt="Logo" className="headerlogo" onClick={() => navigate("/")}></img>
          </div>
          <div className="HeaderButtonsContainer">
            <img src={buttonPartners} alt="" className="headerButtonPartners" onClick={() => navigate("/ambasProgram")}></img>
            <TonConnectButton />
          </div>
        </div>

        <div className="mainTasksPageContainer">
          <div className="info-onexs-block">
            <h2>ONEXs</h2>
            <p>–ê–∫—Ç–∏–≤–∞—Ü–∏—è ONEX‚Äôs –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å TON, ONEX –∏ –¥—Ä. –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.</p>
          </div>

          {/* üî• –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
          {selectedCategory === "all" && (
            <>
              {onexNodes.map((node) => (
                <div className="onex-node all" key={node._id}>
                  <NodeBlock node={node} />
                </div>
              ))}
            </>
          )}
        </div>
      </div>

      <Footer />
    </div>
  );
};

// ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π NodeBlock
const NodeBlock = ({ node }) => {
  return (
    <div className="info-onexs-nameText">
      <div className="info-section-logo">
        <div className="ton-onex-logo">
          <img src={tonIMG} />
          <h2>TON</h2>
          <img src={onexIMG} />
          <h2>ONEX</h2>
        </div>
      </div>

      {/* üî• –ö–Ω–æ–ø–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å */}
      <div className="onexNode-PayButton">
        {node.status === "–∑–∞—Ñ–∞—Ä–º–ª–µ–Ω–æ" ? (
          <div className="pay-button-onexs-farmed">–ó–ê–§–ê–†–ú–õ–ï–ù–û</div>
        ) : (
          <div className="pay-button">–ó–ê–ü–£–°–¢–ò–¢–¨ –ó–ê {node.stake} TON</div>
        )}
      </div>
    </div>
  );
};

export default Onexs;